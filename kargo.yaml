apiVersion: kargo.akuity.io/v1alpha1
kind: Project
metadata:
  name: kargo-demo
  annotations:
    # This annotation ensures Projects (Namespaces) are created first when deployed via Argo CD
    argocd.argoproj.io/sync-wave: "-1"
---
apiVersion: kargo.akuity.io/v1alpha1
kind: ProjectConfig
metadata:
  name: kargo-demo
  namespace: kargo-demo
spec:
  promotionPolicies:
    - autoPromotionEnabled: true
      stageSelector:
        name: dev
    - autoPromotionEnabled: true
      stageSelector:
        name: staging
---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: promote
  namespace: kargo-demo
spec:
  vars:
  - name: repoURL
    value: https://github.com/trappiz/conoa-kargo-demo
  - name: branch
    value: main
  - name: image
    value: quay.io/ceph/nginx
  - name: openpr
    value: "false"
  steps:
  # Clone the Git repository that contains the Kustomize configuration
  # to the ./src directory.
  - uses: git-clone
    config:
      repoURL: ${{ vars.repoURL }}
      checkout:
      - branch: ${{ vars.branch }}
        path: ./src

  # Update the image in the Kustomize configuration located at .env/<stage>
  # in the repository.
  - uses: kustomize-set-image
    as: update-image
    config:
      path: ./src/env/${{ ctx.stage }}
      images:
      - image: ${{ vars.image }}
        tag: ${{ imageFrom( vars.image ).Tag }}

  # Commit the changes to the Git repository.
  - uses: git-commit
    as: commit
    config:
      path: ./src
      message: ${{ task.outputs['update-image'].commitMessage }}

  # Push the changes to the Git repository.
  - uses: git-push
    if: ${{ vars.openpr != 'true' }}
    config:
      path: ./src

  # Push the changes to a newly created branch in the Git repository.
  - uses: git-push
    if: ${{ vars.openpr == 'true' }}
    as: push
    config:
      path: ./src
      generateTargetBranch: true

  # Open a pull request to merge the changes into the main branch.
  - uses: git-open-pr
    as: open-pr
    if: ${{ vars.openpr == 'true' }}
    config:
      repoURL: ${{ vars.repoURL }}
      createTargetBranch: true
      sourceBranch: ${{ task.outputs.push.branch }}
      targetBranch: ${{ vars.branch }}

  # Wait for the pull request to be merged.
  - uses: git-wait-for-pr
    as: wait-for-pr
    if: ${{ vars.openpr == 'true' }}
    config:
      repoURL: ${{ vars.repoURL }}
      prNumber: ${{ task.outputs['open-pr'].pr.id }}

  # Sync Argo CD Application after the Git repository is updated,
  - uses: argocd-update
    config:
      apps:
      - name: demo-${{ ctx.stage }}
        sources:
        - repoURL: ${{ vars.repoURL }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: dev
  namespace: kargo-demo
  annotations:
    kargo.akuity.io/color: red
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: demo-app
    sources:
      direct: true
  promotionTemplate:
    spec:
      steps:
      - task:
          name: promote

---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: staging
  namespace: kargo-demo
  annotations:
    kargo.akuity.io/color: amber
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: demo-app
    sources:
      stages:
      - dev
  promotionTemplate:
    spec:
      steps:
      - task:
          name: promote

---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod
  namespace: kargo-demo
  annotations:
    kargo.akuity.io/color: violet
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: demo-app
    sources:
      stages:
      - staging
  promotionTemplate:
    spec:
      steps:
      - task:
          name: promote
        vars:
        - name: openpr
          value: "true"
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Warehouse
metadata:
  name: demo-app
  namespace: kargo-demo
spec:
  subscriptions:
  - image:
      repoURL: quay.io/ceph/nginx
      imageSelectionStrategy: SemVer
      constraint: ^1.27.0
